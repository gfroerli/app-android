apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'project-report'

def getLocalProperties() {
    final Properties props = new Properties()
    if (file('secrets.properties').exists()) {
        props.load(new FileInputStream(file('secrets.properties')))
    }
    return props
}

final Properties properties = getLocalProperties()

android {
    compileSdkVersion 31
    buildToolsVersion '30.0.3'

    defaultConfig {
        applicationId "ch.coredump.watertemp"
        applicationIdSuffix ".zh"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 10
        versionName "0.6.0"

        buildConfigField 'String', 'GFROERLI_API_KEY_PUBLIC', '"' + properties['gfroerli_api_key_public'] + '"'
        buildConfigField 'String', 'MAPBOX_ACCESS_TOKEN', '"' + properties['mapbox_access_token'] + '"'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        testInstrumentationRunnerArgument 'disableAnalytics', 'true'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        // Enable view bindings
        viewBinding true
        // Enable Jetpack Compose
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.0.5'
    }

    testOptions {
        unitTests.all {
            // Whether failing tests should fail the build
            ignoreFailures false

            // Logging output
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
            }
        }
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"

    // Support libraries
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0-alpha02'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // Jetpack: Integration with activities
    implementation 'androidx.activity:activity-compose:1.4.0'
    // Jetpack: Compose Material Design
    implementation 'androidx.compose.material:material:1.1.0'
    // Jetpack: Animations
    implementation 'androidx.compose.animation:animation:1.1.0'
    // Jetpack: Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.1.0'
    // Jetpack: Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0-alpha02'
    // Jetpack: Inherit from AppCompat theme
    implementation "com.google.accompanist:accompanist-appcompat-theme:0.16.0"

    // Maplibre SDK
    implementation 'org.maplibre.gl:android-sdk:9.5.2'
    implementation 'org.maplibre.gl:android-plugin-annotation-v9:1.0.0'

    // REST client
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'

    // Java 8 date/time API backport
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.4'

    // Relative time calculation
    implementation 'org.ocpsoft.prettytime:prettytime:5.0.0.Final'

    // Baseline alignment of typography
    implementation 'com.actinarium.aligned:aligned:0.1'

    // Charts
    implementation 'com.github.PhilJay:MPAndroidChart:3.1.0'

    // Image loading
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
